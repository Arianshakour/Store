@using Store.Domain.Entities
@using Store.Domain.ViewModels
@model ProductViewModel

@{
    ViewData["Title"] = "آرشیو محصولات";
    var groups = ViewBag.groups as List<ProductGroup>;
}

<div class="container">
    <nav aria-label="breadcrumb">
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><a href="/"> فروشگاه آترین </a></li>
            <li class="breadcrumb-item active"><a href="#"> محصولات </a></li>
        </ul>
    </nav>
</div>


<div class="container">
    <form>

        <section class="term-categories">

            <div class="top-bar">

                <header>
                    <h1>
                        محصولات @if (ViewBag.pg != null)
                        {
                            <span> @ViewBag.pg </span>
                        }
                        else
                        {
                            <span> @ViewBag.search </span>
                        }
                    </h1> <span> 
                        @Model.pager.TotalItems
                        دوره </span></header>

                <div class="row">
                    <div class="col-md-4 col-sm-12 col-xs-12 pull-right">
                        <div class="input">
                            <input type="text" name="search" placeholder="موضوع مورد نظر ...">
                            <button asp-controller="Home" asp-action="Archive"><i class="zmdi zmdi-search"></i></button>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-right">
                        <div class="switch-field available">
                            <input id="available-filter-1" name="type" value="all" checked="" type="radio">
                            <label for="available-filter-1"> همه </label>
                            <input id="available-filter-2" name="type" value="buy" type="radio">
                            <label for="available-filter-2"> خریدنی </label>
                            <input id="available-filter-3" name="type" value="free" type="radio">
                            <label for="available-filter-3"> رایگان </label>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-left">
                        <div class="select-ddl">
                            <select name="orderby">
                                <option value="all"> مرتب سازی </option>
                                <option value="price"> قیمت </option>
                                <option value="date"> تاریخ انتشار </option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">

                <aside class="col-lg-3 col-md-4 col-sm-12 col-xs-12">

                    <section class="aside-section filter-by-price">
                        <header><h3> فیلتر بر اساس قیمت </h3></header>
                        <div class="price-range">
                            <input type="hidden" value="" id="min-value" name="startPrice">
                            <input type="hidden" value="" id="max-value" name="endPrice">
                            <div class="price-bar">
                                <div id="priceFilter"></div>
                            </div>
                            <div class="max-price">تا <span id="max-text">500000</span> تومان</div>
                            <div class="min-price">از <span id="min-text">20000</span> تومان</div>
                            <div class="clearfix"></div>
                        </div>
                    </section>

                    <section class="aside-section filter-by-category">
                        <header><h3> دسته بندی موضوعات </h3></header>
                        <div class="inner">
                            <ul>
                                @foreach (var item in groups.Where(x => x.ParentId == null))
                                {
                                    <li>
                                        <input type="checkbox" name="selectedGroups" value="@item.GroupId" id="cat-1">
                                        <label for="cat-1"> @item.GroupTitle </label>
                                        @if (groups.Any(g => g.ParentId == item.GroupId))
                                        {
                                            <ul>
                                                @foreach (var sub in groups.Where(g => g.ParentId == item.GroupId))
                                                {
                                                    <li>
                                                        <input type="checkbox" name="selectedGroups" value="@sub.GroupId" id="cat-1">
                                                        <label for="cat-1"> @sub.GroupTitle </label>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }

                            </ul>
                        </div>
                    </section>

                </aside>

                <div class="col-lg-9 col-md-8 col-sm-12 col-xs-12">

                    <section class="terms-items">
                        <div class="row">
                            @foreach (var item in Model.productList)
                            {
                                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 term-col">
                                    <article>
                                        <a asp-controller="Home" asp-action="ShowProduct" asp-route-id="@item.ProductId" class="img-layer"><img src="/SiteQaleb/UserAvatar/@item.ImageName"></a>
                                        <h2><a asp-controller="Home" asp-action="ShowProduct" asp-route-id="@item.ProductId"> @item.ProductTitle </a></h2>
                                        <span> @item.Price </span>
                                        <i>@item.productGroup.GroupTitle</i>
                                    </article>
                                </div>
                            }
                        </div>
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">
                                <div id="pager">
                                    <partial name="~/Views/Home/_pager.cshtml" />
                                </div>
                                <!-- /pagination -->
                            </ul>
                        </nav>

                    </section>

                </div>
            </div>
        </section>
    </form>
</div>
@section Scripts {
    <script>
        $(function () {

            var slider = document.getElementById('priceFilter');
            noUiSlider.create(slider, {
                start: [10000, 100000],
                step: 5000,
                connect: true,
                direction: 'rtl',
                range: {
                    'min': 10000,
                    'max': 100000
                }
            });

            var marginMin = document.getElementById('min-text'),
                marginMax = document.getElementById('max-text');

            slider.noUiSlider.on('update', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    marginMax.innerHTML = xvalue;
                } else {
                    marginMin.innerHTML = xvalue;
                }
                //console.log(values[handle]);
            });

            slider.noUiSlider.on('change', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    // setGetParameter('max_price', xvalue);
                    $('#max-value').val(xvalue);
                } else {
                    // setGetParameter('min_price', xvalue);
                    $('#min-value').val(xvalue);
                }
            });


            slider.noUiSlider.on('slide', function (values, handle) {

                console.log(values[0]);
                console.log(values[1]);

                var xvalue = Math.round(values[handle]);
                //updateSliderRange( Math.round(values[0]), Math.round(values[1]) );
            });



            function updateSliderRange(min, max) {
                slider.noUiSlider.updateOptions({
                    range: {
                        'min': min,
                        'max': max
                    }
                });
            }
        });
    </script>
}